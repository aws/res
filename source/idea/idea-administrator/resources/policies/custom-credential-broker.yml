Version: '2012-10-17'
Statement:
  - Action:
      - logs:CreateLogGroup
    Resource: "{{ context.arns.get_lambda_log_group_arn() }}"
    Effect: Allow
    Sid: CloudWatchLogsPermissions

  - Action:
      - logs:CreateLogStream
      - logs:PutLogEvents
      - logs:DeleteLogStream
    Resource: "{{ context.arns.lambda_log_stream_arn }}"
    Effect: Allow
    Sid: CloudWatchLogStreamPermissions

  - Action:
    - sts:AssumeRole
    Resource:
      - '{{ context.arns.get_iam_arn("s3-mount-bucket-read-only")}}'
      - '{{ context.arns.get_iam_arn("s3-mount-bucket-read-write")}}'
    Effect: Allow

  - Action:
      - dynamodb:GetItem
      - dynamodb:BatchGetItem
    Resource:
      {{ context.utils.to_yaml(context.arns.cluster_config_ddb_arn) | indent(6) }}
    Effect: Allow
    Condition:
      ForAllValues:StringLike:
        dynamodb:LeadingKeys:
          - shared-storage.*

  - Action:
      - dynamodb:BatchGetItem
      - dynamodb:GetItem
      - dynamodb:Query
      - dynamodb:Scan
    Resource:
      - '{{ context.arns.get_ddb_table_arn(context.config.get_module_id("virtual-desktop-controller") + ".controller.servers") }}'
      - '{{ context.arns.get_ddb_table_arn(context.config.get_module_id("virtual-desktop-controller") + ".controller.user-sessions") }}'
    Effect: Allow

  - Action:
     - ec2:DescribeSubnets
     - ec2:DescribeNetworkInterfaces
     - ec2:DeleteNetworkInterface
     - ec2:DescribeInstances
    Resource: "*"
    Effect: Allow

  - Action:
     - ec2:CreateTags
     - ec2:CreateNetworkInterface
    Resource:
      - '{{ context.arns.get_arn("ec2", "subnet/*") }}'
      - '{{ context.arns.get_arn("ec2", "network-interface/*") }}'
      - '{{ context.arns.get_arn("ec2", "security-group/*") }}'
    Effect: Allow

  - Action:
      - sts:AssumeRole
    Resource: "*"
    Effect: Allow
    Condition:
      StringEquals:
        iam:ResourceTag/res:Resource: '{{ context.vars.s3_bucket_iam_role_resource_tag_value }}'

  - Action:
     - ec2:AssignPrivateIpAddresses
     - ec2:UnassignPrivateIpAddresses
    Resource: "*"
    Effect: Allow
    Condition:
      ForAnyValue:StringLikeIfExists:
        ec2:SubnetID:
          - '{{ context.arns.get_arn("ec2", "subnet/*") }}'
