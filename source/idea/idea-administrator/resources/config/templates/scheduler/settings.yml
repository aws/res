# Scale-Out Computing Settings

# specify if the scheduler instance can be launched in public or private subnet
public: false
instance_type: {{instance_type}}
base_os: {{base_os}}
instance_ami: {{instance_ami}}
volume_size: {{volume_size}}
hostname: "{{module_id}}.{{cluster_name}}.{{aws_region}}.local"
provider: openpbs # only openpbs is supported as of now

# provide additional policy arns to be attached to the scheduler IAM Role created by IDEA
scheduler_iam_policy_arns: []

compute_node_os: {{base_os}}
compute_node_ami: {{instance_ami}}

# provide additional policy arns to be attached to the default compute node IAM Role created by IDEA
compute_node_iam_policy_arns: []

endpoints:
  external:
    priority: 15
    path_patterns: ['/{{module_id}}/*']
  internal:
    priority: 15
    path_patterns: ['/{{module_id}}/*']

server:
  enable_http: true
  hostname: 0.0.0.0
  port: 8443
  enable_tls: true
  tls_certificate_file: {{internal_mount_dir}}/{{cluster_name}}/certs/idea.crt
  tls_key_file: {{internal_mount_dir}}/{{cluster_name}}/certs/idea.key
  enable_unix_socket: true
  unix_socket_file: /run/idea.sock
  max_workers: 16
  enable_metrics: false
  graceful_shutdown_timeout: 10
  api_context_path: /{{module_id}}

logging:
  logs_directory: /opt/idea/app/logs
  profile: production
  default_log_file_name: application.log

cloudwatch_logs:
  enabled: true

ec2:
  # enable detailed monitoring for scheduler ec2 instance, enabled by default
  enable_detailed_monitoring: true
  # enable termination protection for scheduler ec2 instance, enabled by default
  enable_termination_protection: true
  # instance metadata access method
  metadata_http_tokens: "required"  # supported values are "required" for IMDSv2 or "optional" for IMDSv1

cache:
  long_term:
    max_size: 1000
    ttl_seconds: 86400 # 1 day
  short_term:
    max_size: 10000
    ttl_seconds: 600 # 10 minutes

cost_estimation:
  ec2_boot_penalty_seconds: 300
  default_fsx_lustre_size: 1200
  # Update EBS rate for your region
  # EBS Formulas: https://aws.amazon.com/ebs/pricing/
  ebs_gp3_storage: 0.08 # $ per gb per month
  ebs_io1_storage: 0.125 # IOPS per month
  provisioned_iops: 0.065 # IOPS per month
  fsx_lustre: 0.000194 # GB per hour

job_provisioning:
  # Determine if AWS Service Quotas should be used:
  # True (default) - query AWS service quotas API to make sure an incoming job can be deployed.
  # False          - Do not query service quotas API. Submit the jobs for AWS provisioning.
  # WARNING:
  #  Setting this to False can have unintended consequences related to idle or stranded resources.
  service_quotas: True

  # specifies the duration after which the cloud formation stack should be terminated and job provisioning should be retried.
  # this is used to ensure provisioning capacity failures, if any are retried
  stack_provisioning_timeout_seconds: 1800

  # the interval at which node housekeeping session is executed.
  # housekeeping cycles ensure new ec2 instances (nodes) join the cluster and old nodes are deleted.
  # additionally, custom metrics are published at below frequency for cluster monitoring
  node_housekeeping_interval_seconds: 60

  # the interval that job monitor waits before fetching new jobs queued from scheduler.
  job_submission_queue_interval_seconds: 1

  # the interval at which jobs are provisioned
  # job provisioner will block/wait for this duration before proceeding to provision another queued job.
  # for ephemeral capacity - this is applicable per job, for batch/job shared capacity, this interval is applicable per batch
  # this ensures cloudformation stack creation requests are not throttled.
  job_provisioning_interval_seconds: 1

  # the interval to wait for batch job provisioning
  # if more jobs are queued during this interval, provisioner will wait until all jobs in the batch have been queued and accepted
  # applicable only for job-shared/batch scaling mode queues.
  batch_provisioning_wait_interval_seconds: 3

  # the interval at which idea scheduler checks and processes finished jobs
  finished_job_processing_interval_seconds: 30

  # SpotFleet Request configuration
  # refer to: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html for additional documentation
  spot_fleet_request:
    excess_capacity_termination_policy: noTermination # can be one of [default, noTerminate]
    instance_interruption_behavior: terminate # can be one of [hibernate, stop, terminate]
    spot_maintenance_strategies: ~ # can be null (~) or CapacityRebalance
    request_type: maintain # can be one of [maintain, request]

  # Mixed Instance Policy configuration for ASG
  # Used when a mix of On-Demand + Spot instances are configured during job submission
  mixed_instances_policy:
    # refer to https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_InstancesDistribution.html for more info
    on_demand_allocation_strategy: prioritized # can be one of [prioritized, lowest-price]

  # Placement Group config
  placement_group:
    # refer to: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html for more details
    # AWS Outpost placements is not supported.

    # The placement strategy
    strategy: cluster # can be one of [cluster, partition, spread]

fair_share:
  start_score: 100
  running_job_penalty: -60
  score_type: linear
  c1: 1
  c2: 0

notifications:
  enabled: true
  job_started:
    email_template: scheduler.job-started
  job_completed:
    email_template: scheduler.job-completed

scratch_storage:
  fsx_lustre:
    mount_point: /fsx
  ebs:
    mount_point: /scratch
  instance_store:
    mount_point: /scratch

openpbs:
  server:
    # OpenPBS Server Configuration
    # - These parameters are configurable ONE TIME during scheduler installation.
    # - Changes to openpbs server configurations post-deployment need to be manually applied.

    # Note: Documentation is sourced from: Altair PBS Professional 2022.1 Big Book PDF. Refer to the manual for more details.

    # This attribute specifies whether, for each user, the username at the submission host must be the same as the one at the server host.
    # The username at the server host must always be the same as the username at the execution host.
    # When flatuid is set to True, the server assumes that UserA@host1 is the same as UserA@host2. Therefore, if flatuid is True, UserA@host2 can operate on UserA@host1's job.
    flatuid: 'true'

    # configure whether PBS preserves job history, and for how long, by setting values for the job_history_enable and job_history_duration server attributes.
    job_history_enable: '1'
    job_history_duration: '72:00:00'

    # time in seconds between scheduling iterations
    scheduler_iteration: '30'

    # The maximum number of vnodes allowed to be in the process of being provisioned.
    max_concurrent_provision: '5000'
