administrator_email: "{{administrator_email}}"
administrator_username: "{{administrator_username}}"
cluster_name: "{{cluster_name}}"
cluster_s3_bucket: "{{cluster_name}}-cluster-{{aws_region}}-{{aws_account_id}}"
encoding: utf-8
home_dir: "{{internal_mount_dir}}/{{cluster_name}}"
locale: "{{ cluster_locale }}"
timezone: "{{ cluster_timezone }}"

aws:
  account_id: "{{ aws_account_id }}"
  dns_suffix: "{{ aws_dns_suffix }}"
  partition: "{{ aws_partition }}"
  pricing_region: us-east-1
  region: "{{ aws_region }}"

ses:
  enabled: false
  account_id: "{{aws_account_id}}"
  region: "{{aws_region}}"
  sender_email: "{{administrator_email}}"
  # The maximum number of emails that Amazon SES can accept from your account each second.
  # You can exceed this quota for short bursts, but not for sustained periods of time.
  # For more information, see: https://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-quotas.html
  max_sending_rate: 1

route53:
  private_hosted_zone_name: "{{cluster_name}}.{{aws_region}}.local"

network:
  # You must specify the maximum number of entries for the prefix list. The maximum number of entries cannot be changed later.
  cluster_prefix_list_max_entries: 10
  prefix_list_ids:
    {{ utils.to_yaml(prefix_list_ids) | indent(4) }}
  client_ip:
    {{ utils.to_yaml(client_ip) | indent(4) }}
  ssh_key_pair: "{{ssh_key_pair_name}}"

  {%- if use_existing_vpc %}
  use_existing_vpc: true
  vpc_id: "{{vpc_id}}"

  private_subnets:
    {{ utils.to_yaml(private_subnet_ids) | indent(4) }}
  public_subnets:
    {{ utils.to_yaml(public_subnet_ids) | indent(4) }}
  load_balancer_subnets:
    {{ utils.to_yaml(load_balancer_subnet_ids) | indent(4) }}
  infrastructure_host_subnets: 
    {{ utils.to_yaml(infrastructure_host_subnet_ids) | indent(4) }}
  {%- else %}
  max_azs: 3
  nat_gateways: 1
  subnet_config:
    public:
      cidr_mask: 26
    private:
      cidr_mask: 18
  vpc_cidr_block: "{{vpc_cidr_block}}"
  vpc_flow_logs: true
  {%- endif %}

  use_vpc_endpoints: {{use_vpc_endpoints | lower}}
  {%- if use_vpc_endpoints %}
  # provide VPC Interface and Gateway Endpoints below if use_vpc_endpoints = True.

  # enabled: true/false config entry in interface endpoint can be used to specify if the endpoint can be used in the boto3 client across all IDEA modules.

  # For new VPCs:
  # the cluster CDK stack will provision all endpoints specified in vpc_gateway_endpoints and vpc_interface_endpoints.
  # Applicable VPC Endpoints for the region are automatically generated using vpc_endpoints_helper.py
  # During upgrades, if an endpoint entry is removed, the VPC endpoint entry will be deleted by the cluster stack.
  # enabling/disabling the config entry has no impact on provisioning of the VPC Interface endpoint, but is used during boto3 client configuration

  # For existing VPCs:
  # It is admin responsibility to provide and configure all VPC endpoints in the config.
  # VPC endpoints will NOT be provisioned by the Cluster CDK Stack.
  # Format for providing VPC endpoints is as below:
  # vpc_gateway_endpoints:
  #   - s3
  #   - dynamodb
  # vpc_interface_endpoints:
  #   ec2:
  #      enabled: true
  #      endpoint_url: https://endpoint-url
  vpc_gateway_endpoints:
    {{ utils.to_yaml(vpc_gateway_endpoints) | indent(4) }}
  vpc_interface_endpoints:
    {{ utils.to_yaml(vpc_interface_endpoints) | indent(4) }}
  # Some services used by IDEA don't support VPC endpoints (DynamoDB Streams, Cognito, Directory Service, Service Quota)
  # https_proxy needs to be set to route traffic to these services if deploying in isolated subnets without a NAT gateway
  # https_proxy expected format is http://<hostname>:<port>
  https_proxy: ""
  no_proxy: "127.0.0.1,169.254.169.254,localhost,{{ aws_region }}.local,{{ aws_region }}.vpce.{{ aws_dns_suffix }},s3.{{ aws_region }}.{{ aws_dns_suffix }},s3.dualstack.{{ aws_region }}.{{ aws_dns_suffix }},dynamodb.{{ aws_region }}.{{ aws_dns_suffix }},{{ aws_region }}.es.{{ aws_dns_suffix }},sqs.{{ aws_region }}.{{ aws_dns_suffix }},ec2.{{ aws_region }}.{{ aws_dns_suffix }},secretsmanager.{{ aws_region }}.{{ aws_dns_suffix }},sns.{{ aws_region }}.{{ aws_dns_suffix }},cloudformation.{{ aws_region }}.{{ aws_dns_suffix }},elasticloadbalancing.{{ aws_region }}.{{ aws_dns_suffix }},monitoring.{{ aws_region }}.{{ aws_dns_suffix }},logs.{{ aws_region }}.{{ aws_dns_suffix }},ssm.{{ aws_region }}.{{ aws_dns_suffix }},application-autoscaling.{{ aws_region }}.{{ aws_dns_suffix }},events.{{ aws_region }}.{{ aws_dns_suffix }},kinesis.{{ aws_region }}.{{ aws_dns_suffix }},{{ aws_region }}.elb.{{ aws_dns_suffix }},autoscaling.{{ aws_region }}.{{ aws_dns_suffix }}"
  {%- else %}
  # https_proxy expected format is http://<hostname>:<port>
  https_proxy: ""
  no_proxy: "127.0.0.1,169.254.169.254,localhost,{{ aws_region }}.local,{{ aws_region }}.elb.{{ aws_dns_suffix }},{{ aws_region }}.es.{{ aws_dns_suffix }}"
  {%- endif %}

# AWS Key Management Service
kms:
  # can be one of [customer-managed, aws-managed]
  key_type: {{ kms_key_type if kms_key_type else '~' }}

# Configure cluster-wide AWS Secrets Manager settings below
secretsmanager:
  kms_key_id: {{ kms_key_id if kms_key_id else '~' }} # Specify your own CMK to encrypt Secrets Manager secrets. If set to ~ encryption will be managed by the default AWS key

# Configure cluster-wide SQS settings below
# The customer managed key for Amazon SQS queues must have a policy statement that grants Amazon SNS service-principal access
# Consult the documentation at: https://docs.aws.amazon.com/sns/latest/dg/sns-enable-encryption-for-topic-sqs-queue-subscriptions.html
sqs:
  kms_key_id: {{ kms_key_id if kms_key_id else '~' }} # Specify your own CMK to encrypt SQS queues. If set to ~ encryption will be managed by the default AWS key

# Configure cluster-wide SNS settings below
sns:
  kms_key_id: {{ kms_key_id if kms_key_id else '~' }} # Specify your own CMK to encrypt SNS topics. If set to ~ encryption will be managed by the default AWS key

# Configure cluster-wide DynamoDB settings below.
dynamodb:
  # Note: Dynamodb <cluster-name>.vdc.dcv-broker.* tables are encrypted with DynamoDB service key
  kms_key_id: {{ kms_key_id if kms_key_id else '~' }} # Specify your own CMK to encrypt DynamoDB tables. If set to ~ encryption will be managed by the default AWS key

# Configure cluster-wide EBS settings below
ebs:
  kms_key_id: {{ kms_key_id if kms_key_id else '~' }} # Specify your own CMK to encrypt EBS volumes. If set to ~ encryption will be managed by the default AWS key

solution:
  # Enable to disable IDEA Anonymous Metric Collection.
  enable_solution_metrics: true
  custom_anonymous_metric_entry: ~ # Add a string to be automatically sent as "Misc" entry for Anonymous Metrics.

iam:
  # IAM policy ARNs provided below will be attached to all IAM roles for EC2 Instances launched by RES.
  ec2_managed_policy_arns: []
  # IAM permission boundary policy ARN provided below will be attached to all IAM roles created in RES.
  permission_boundary_arn: {{ permission_boundary_arn if permission_boundary_arn else '~'}}

load_balancers:
  external_alb:
    public: {{alb_public | lower}}
    access_logs: true
    certificates:
      # if alb_custom_certificate_provided = false, self signed certificates will be generated for external ALB
      # if alb_custom_certificate_provided = true, import your own certificates to AWS ACM and provide alb_custom_certificate_acm_certificate_arn, alb_custom_dns_name
      provided: {{alb_custom_certificate_provided | lower}}
      acm_certificate_arn: {{alb_custom_certificate_acm_certificate_arn if alb_custom_certificate_acm_certificate_arn else '~'}}
      custom_dns_name: {{alb_custom_dns_name if alb_custom_dns_name else '~'}}
    # SSL/TLS Policy on External Load Balancer
    # For a list of policies - consult the documentation at https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies
    ssl_policy: ELBSecurityPolicy-TLS13-1-2-2021-06
  internal_alb:
    access_logs: true
    # SSL/TLS Policy on Internal Load Balancer
    # For a list of policies - consult the documentation at https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies
    ssl_policy: ELBSecurityPolicy-TLS13-1-2-2021-06

cloudwatch_logs:
  # enable or disable publishing logs to cloudwatch across the cluster.
  # individual modules will check if cluster.cloudwatch_logs.enabled before checking for their respective logging config.
  enabled: true
  # Specifies in seconds the maximum amount of time that logs remain in the memory buffer before being sent to the server.
  # No matter the setting for this field, if the size of the logs in the buffer reaches 1 MB, the logs are immediately sent to the server.
  force_flush_interval: 5
  # this is default value for retention. individual modules may choose to set a different log retention value
  retention_in_days: 90



# AWS Backup Configuration
# Refer: https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html to know more about AWS Backup and which services are supported by AWS Backup.
# Refer to IDEA Documentation > Architecture > Backup for additional details on AWS Backup integration.
backups:

  # enable or disable back up plans.
  # if disabled, AWS Backups infrastructure will not be provisioned.
  # enabling backups after cluster deployment, needs cluster stack upgrade.
  # WARNING:
  # * disabling backups after cluster deployment is not recommended
  # * needs cluster stack upgrade.
  # * provisioned backup infrastructure will be DELETED!
  # * deletion will fail for vaults containing recovery points!
  enabled: {{ enable_aws_backup | lower }}

  # enable or disable restore permissions for AWS Backup
  # if true, restore permission policies will be added to the Backup Role
  enable_restore: true

  # Backup Vault configuration
  # a new backup vault will be provisioned per IDEA cluster if backups is enabled.
  # existing backup vault is not supported.
  backup_vault:

    # Specify your own CMK to encrypt backup vault. If set to ~ encryption will be managed by the default AWS key
    kms_key_id: {{ kms_key_id if kms_key_id else '~' }}

    # The removal policy to apply to the vault.
    # Note that removing a vault that contains recovery points will fail.
    removal_policy: "RETAIN"

  # backup plan configuration applicable for infrastructure nodes + (new) shared storage provisioned by IDEA across all modules
  # for eVDI nodes, refer to backup-plan configuration in eVDI settings.
  backup_plan:

    # Backup Selection (Resource assignments)
    # Resource assignments specify which resources will be backed up by this Backup plan.
    selection:

      # Resources having below tags will be assigned to the cluster's backup plan
      tags:
        - "Key=res:BackupPlan,Value={{ cluster_name }}-{{ module_id }}"

    rules:

      # <rule-name>
      #   delete_after_days:
      #   Specifies the duration after creation that a recovery point is deleted.
      #   Must be greater than `move_to_cold_storage_after`

      #   move_to_cold_storage_after:
      #   Specifies the duration after creation that a recovery point is moved to cold storage.

      #   schedule_expression:
      #   A CRON expression specifying when AWS Backup initiates a backup job
      #   Refer: https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html

      #   start_window_minutes:
      #   The duration after a backup is scheduled before a job is canceled if it doesn't start successfully
      #   minimum duration: 60 minutes

      #   completion_window_minutes:
      #   The duration after a backup job is successfully started before it must be completed or it is canceled by AWS Backup
      #   minimum duration: 60 minutes


      # a default rule is created for daily backup at 5AM UTC, with below parameters.
      # rules can be added / modified based on requirements.
      # a cluster stack upgrade is required if rules are modified after cluster is deployed.
      # NOTE:
      # manual changes to rules in backup plan via AWS Console, after cluster has been deployed can result in conflicts or upgrade failures.

      default:
        delete_after_days: 7
        move_to_cold_storage_after_days: ~
        schedule_expression: "cron(0 5 * * ? *)"
        start_window_minutes: 60 # 1 hour
        completion_window_minutes: 480 # 8 hours

#      weekly:
#        delete_after_days: 30
#        move_to_cold_storage_after_days: ~
#        schedule_expression: "cron(0 5 * * ? *)"
#        start_window_minutes: 240 # 4 hours
#        completion_window_minutes: 1440 # 24 hours
#
#      monthly:
#        delete_after_days: 180
#        move_to_cold_storage_after_days: 30
#        schedule_expression: "cron(0 5 * * ? *)"
#        start_window_minutes: 480 # 8 hour
#        completion_window_minutes: 1440 # 24 hours
