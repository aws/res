
configuration:
  instance_type_command: &instance_type_command >-
      TOKEN=$(curl --silent -X PUT 'http://169.254.169.254/latest/api/token' -H 'X-aws-ec2-metadata-token-ttl-seconds: 300') &&
      curl --silent -H "X-aws-ec2-metadata-token: ${TOKEN}" 'http://169.254.169.254/latest/meta-data/instance-type'

test_cases:

  - name: instance_type_t2
    resource: instance_type=t2.large
    command: *instance_type_command
    expected_output: t2.large
    queue: normal
    skip_regions: ['af-south-1', 'eu-north-1', 'eu-south-1', 'me-south-1', 'me-central-1', 'ap-east-1']

  - name: instance_type_t3
    resource: instance_type=t3.large
    command: *instance_type_command
    expected_output: t3.large
    queue: normal
    skip_regions: []

  - name: instance_type_t3a
    resource: instance_type=t3a.large
    command: *instance_type_command
    expected_output: t3a.large
    queue: normal
    skip_regions: ['af-south-1', 'eu-north-1', 'ap-northeast-3', 'me-south-1', 'me-central-1', 'ap-east-1']

  - name: instance_type_t4g
    resource: instance_type=t4g.large
    command: *instance_type_command
    expected_output: t4g.large
    queue: normal
    skip_regions: ['all'] # todo: uncomment when we have graviton support on region_ami_config
    #skip_regions: ['af-south-1', 'ap-northeast-3', 'me-south-1']

  - name: instance_type_m5
    resource: instance_type=m5.large
    command: *instance_type_command
    expected_output: m5.large
    queue: normal
    skip_regions: []

  - name: instance_type_m5a
    resource: instance_type=m5a.large
    command: *instance_type_command
    expected_output: m5a.large
    queue: normal
    skip_regions: ['af-south-1', 'eu-north-1', 'ap-northeast-3', 'me-south-1', 'me-central-1', 'ap-east-1']

  - name: instance_type_m5n
    resource: instance_type=m5n.large
    command: *instance_type_command
    expected_output: m5n.large
    queue: normal
    skip_regions: ['af-south-1', 'eu-north-1', 'ap-south-1', 'eu-west-3', 'eu-west-2', 'eu-south-1', 'ap-northeast-3', 'ap-northeast-2', 'me-south-1', 'me-central-1', 'sa-east-1', 'ca-central-1', 'ap-east-1', 'ap-southeast-2', 'us-west-1']

  - name: instance_type_m5zn
    resource: instance_type=m5zn.large
    command: *instance_type_command
    expected_output: m5zn.large
    queue: normal
    skip_regions: ['us-gov-east-1', 'us-gov-west-1', 'af-south-1', 'eu-north-1', 'ap-south-1', 'eu-west-3', 'eu-west-2', 'eu-south-1', 'ap-northeast-3', 'me-south-1', 'me-central-1', 'ca-central-1', 'ap-east-1']

  - name: instance_type_m6a
    resource: instance_type=m6a.large
    command: *instance_type_command
    expected_output: m6a.large
    queue: normal
    skip_regions: ['us-gov-east-1', 'us-gov-west-1', 'af-south-1', 'eu-north-1', 'eu-west-3', 'eu-west-2', 'eu-south-1', 'ap-northeast-3', 'ap-northeast-2', 'me-south-1', 'ap-northeast-1', 'me-central-1', 'sa-east-1', 'ca-central-1', 'ap-east-1', 'ap-southeast-1', 'ap-southeast-2', 'us-west-1']

  - name: instance_type_m6i
    resource: instance_type=m6i.large
    command: *instance_type_command
    expected_output: m6i.large
    queue: normal
    skip_regions: ['af-south-1', 'ap-northeast-3', 'me-central-1']

  - name: instance_type_m6g
    resource: instance_type=m6g.large
    command: *instance_type_command
    expected_output: m6g.large
    queue: normal
    skip_regions: ['all'] # todo: uncomment when we have graviton support on region_ami_config
    #skip_regions: ['af-south-1', 'ap-northeast-3']

  - name: instance_type_c5
    resource: instance_type=c5.2xlarge
    command: *instance_type_command
    expected_output: c5.2xlarge
    queue: normal
    skip_regions: []

  - name: instance_type_c5a
    resource: instance_type=c5a.large
    command: *instance_type_command
    expected_output: c5a.large
    queue: normal
    skip_regions: ['ap-northeast-3', 'me-central-1']

  - name: instance_type_c5n
    resource: instance_type=c5n.large
    command: *instance_type_command
    expected_output: c5n.large
    queue: normal
    skip_regions: ['ap-northeast-3', 'me-central-1']

  - name: instance_type_c6a
    resource: instance_type=c6a.large
    command: *instance_type_command
    expected_output: c6a.large
    queue: normal
    skip_regions: ['us-gov-east-1', 'us-gov-west-1', 'af-south-1', 'eu-north-1', 'eu-west-3', 'eu-west-2', 'eu-south-1', 'ap-northeast-3', 'ap-northeast-2', 'me-south-1', 'ap-northeast-1', 'me-central-1', 'sa-east-1', 'ca-central-1', 'ap-east-1', 'ap-southeast-1', 'ap-southeast-2', 'us-west-1']

  - name: instance_type_c6i
    resource: instance_type=c6i.large
    command: *instance_type_command
    expected_output: c6i.large
    queue: normal
    skip_regions: ['af-south-1', 'ap-northeast-3', 'me-central-1']

  - name: instance_type_c6gn
    resource: instance_type=c6gn.medium
    command: *instance_type_command
    expected_output: c6gn.medium
    queue: normal
    skip_regions: ['all'] # todo: uncomment when we have graviton support on region_ami_config
    #skip_regions: ['af-south-1', 'me-central-1']

  - name: instance_type_c6g
    resource: instance_type=c6g.medium
    command: *instance_type_command
    expected_output: c6g.medium
    queue: normal
    skip_regions: ['all'] # todo: uncomment when we have graviton support on region_ami_config
    #skip_regions: ['af-south-1']

  - name: instance_type_c7g
    resource: instance_type=c7g.medium
    command: *instance_type_command
    expected_output: c7g.medium
    queue: normal
    skip_regions: ['all'] # todo: uncomment when we have graviton support on region_ami_config
    #skip_regions: ['af-south-1', 'eu-north-1', 'ap-south-1', 'eu-west-3', 'eu-west-2', 'eu-south-1', 'ap-northeast-3', 'ap-northeast-2', 'me-south-1', 'ap-northeast-1', 'me-central-1', 'sa-east-1', 'ca-central-1', 'ap-east-1', 'ap-southeast-1', 'ap-southeast-2', 'eu-central-1', 'us-west-1']

  - name: instance_type_hpc6a
    resource: instance_type=hpc6a.48xlarge
    command: *instance_type_command
    expected_output: hpc6a.48xlarge
    queue: normal
    skip_regions: ['all']
    #skip_regions: ['af-south-1', 'ap-south-1', 'eu-west-3', 'eu-west-2', 'eu-south-1', 'eu-west-1', 'ap-northeast-3', 'ap-northeast-2', 'me-south-1', 'ap-northeast-1', 'me-central-1', 'sa-east-1', 'ca-central-1', 'ap-east-1', 'ap-southeast-1', 'ap-southeast-2', 'eu-central-1', 'us-east-1', 'us-west-1', 'us-west-2']

  - name: instance_type_r4
    resource: instance_type=r4.large
    command: *instance_type_command
    expected_output: r4.large
    queue: normal
    skip_regions: ['af-south-1', 'eu-north-1', 'eu-south-1', 'me-south-1', 'me-central-1', 'ap-east-1']

  - name: instance_type_r5
    resource: instance_type=r5.large
    command: *instance_type_command
    expected_output: r5.large
    queue: normal
    skip_regions: []

  - name: instance_type_r5a
    resource: instance_type=r5a.large
    command: *instance_type_command
    expected_output: r5a.large
    queue: normal
    skip_regions: ['af-south-1', 'eu-north-1', 'ap-northeast-3', 'me-south-1', 'me-central-1', 'ap-east-1']

  - name: instance_type_r5b
    resource: instance_type=r5b.large
    command: *instance_type_command
    expected_output: r5b.large
    queue: normal
    skip_regions: ['us-gov-east-1', 'us-gov-west-1', 'af-south-1', 'eu-north-1', 'ap-south-1', 'eu-west-3', 'eu-south-1', 'ap-northeast-3', 'me-south-1', 'me-central-1', 'ap-east-1', 'us-west-1']

  - name: instance_type_r5n
    resource: instance_type=r5n.large
    command: *instance_type_command
    expected_output: r5n.large
    queue: normal
    skip_regions: ['ap-northeast-3', 'me-south-1', 'me-central-1']

  - name: instance_type_r6a
    resource: instance_type=r6a.large
    command: *instance_type_command
    expected_output: r6a.large
    queue: normal
    skip_regions: ['us-gov-east-1', 'us-gov-west-1', 'af-south-1', 'eu-north-1', 'eu-west-3', 'eu-west-2', 'eu-south-1', 'ap-northeast-3', 'ap-northeast-2', 'me-south-1', 'ap-northeast-1', 'me-central-1', 'sa-east-1', 'ca-central-1', 'ap-east-1', 'ap-southeast-1', 'ap-southeast-2', 'us-west-1']

  - name: instance_type_r6g
    resource: instance_type=r6g.large
    command: *instance_type_command
    expected_output: r6g.large
    queue: normal
    skip_regions: ['all'] # todo: uncomment when we have graviton support on region_ami_config
    #skip_regions: ['af-south-1', 'ap-northeast-3', 'me-south-1']

  - name: instance_type_r6i
    resource: instance_type=r6i.large
    command: *instance_type_command
    expected_output: r6i.large
    queue: normal
    skip_regions: ['af-south-1', 'ap-northeast-3', 'me-south-1', 'me-central-1']

  - name: instance_type_x2gd
    resource: instance_type=x2gd.large
    command: *instance_type_command
    expected_output: x2gd.large
    queue: normal
    skip_regions: ['all'] # todo: uncomment when we have graviton support on region_ami_config
    #skip_regions: ['af-south-1', 'eu-north-1', 'ap-south-1', 'eu-west-3', 'eu-west-2', 'eu-south-1', 'ap-northeast-3', 'ap-northeast-2', 'me-south-1', 'ap-northeast-1', 'me-central-1', 'sa-east-1', 'ca-central-1', 'ap-east-1', 'ap-southeast-1', 'ap-southeast-2', 'eu-central-1', 'us-west-1']

  - name: instance_type_x2iedn
    resource: instance_type=x2iedn.xlarge
    command: *instance_type_command
    expected_output: x2iedn.xlarge
    queue: normal
    skip_regions: ['all']

  - name: instance_type_x2iezn
    resource: instance_type=x2iezn.2xlarge
    command: *instance_type_command
    expected_output: x2iezn.2xlarge
    queue: normal
    skip_regions: ['all']

  - name: instance_type_p3
    resource: instance_type=p3.2xlarge
    command: *instance_type_command
    expected_output: p3.2xlarge
    queue: normal
    skip_regions: ['all']

  - name: instance_type_p4d
    resource: instance_type=p4d.24xlarge
    command: *instance_type_command
    expected_output: p4d.24xlarge
    queue: normal
    skip_regions: ['all']

  - name: instance_type_trn1
    resource: instance_type=trn1.2xl
    command: *instance_type_command
    expected_output: trn1.2xl
    queue: normal
    skip_regions: ['all']

  - name: instance_type_inf1
    resource: instance_type=inf1.xlarge
    command: *instance_type_command
    expected_output: inf1.xlarge
    queue: normal
    skip_regions: ['all']

  - name: instance_type_g5
    resource: instance_type=g5.xlarge
    command: *instance_type_command
    expected_output: g5.xlarge
    queue: normal
    skip_regions: ['all']

  - name: instance_type_g5g
    resource: instance_type=g5g.xlarge
    command: *instance_type_command
    expected_output: g5g.xlarge
    queue: normal
    skip_regions: ['all']

  - name: instance_type_g4dn
    resource: instance_type=g4dn.xlarge
    command: *instance_type_command
    expected_output: g4dn.xlarge
    queue: normal
    skip_regions: ['all']

  - name: instance_type_g4ad
    resource: instance_type=g4ad.xlarge
    command: *instance_type_command
    expected_output: g4ad.xlarge
    queue: normal
    skip_regions: ['all']

  - name: instance_type_f1
    resource: instance_type=f1.2xlarge
    command: *instance_type_command
    expected_output: f1.2xlarge
    queue: normal
    skip_regions: ['all']

  # Other tests
  - name: hello_world
    resource: instance_type=t3.large
    command: echo HelloWorld
    expected_output: HelloWorld
    queue: normal
    skip_regions: []

  - name: scratch_size
    resource: instance_type=t2.medium,scratch_size=36
    command: /bin/df -h --output=size /scratch | tail -n1 | tr -d ' '
    expected_output: 36G
    queue: normal
    skip_regions: []

  - name: root_size
    resource: instance_type=t2.medium,root_size=44
    command: /bin/df -h --output=size / | tail -n1 | tr -d ' '
    expected_output: 44G
    queue: normal
    skip_regions: []

  - name: efa
    resource: instance_type=c5n.9xlarge,efa_support=True
    command: /opt/amazon/efa/bin/fi_info -p efa -t FI_EP_RDM | head -n1
    expected_output: "provider: efa"
    queue: normal
    skip_regions: []

  - name: instance_store_single_volume
    resource: instance_type=m5ad.large
    command: /bin/df -h --output=size /scratch | tail -n1 | tr -d ' '
    expected_output: 69G
    queue: normal
    skip_regions: []

  - name: instance_store_multiple_volumes
    resource: instance_type=m5ad.4xlarge
    command: /bin/df -h --output=size /scratch | tail -n1 | tr -d ' '
    expected_output: 550G
    queue: normal
    skip_regions: []

  - name: ht_enabled
    resource: instance_type=m5.xlarge,ht_support=True
    command: /bin/lscpu --extended | sed 1d | wc -l
    expected_output: 4
    queue: normal
    skip_regions: []

  - name: ht_disabled
    resource: instance_type=m5.xlarge,ht_support=False
    command: /bin/lscpu --extended | sed 1d | wc -l
    expected_output: 2
    queue: normal
    skip_regions: []

  - name: fsx_2tb
    resource: fsx_lustre=True,fsx_lustre_size=2400
    command: /bin/lfs df -h  /fsx | grep filesystem_summary | awk '{print $2}'
    expected_output: 2.2T
    queue: normal
    skip_regions: []

  - name: check_spot
    resource: spot_price=auto
    command: >-
      TOKEN=$(curl --silent -X PUT 'http://169.254.169.254/latest/api/token' -H 'X-aws-ec2-metadata-token-ttl-seconds: 300') &&
      curl --silent -H "X-aws-ec2-metadata-token: ${TOKEN}" 'http://169.254.169.254/latest/meta-data/instance-life-cycle'
    expected_output: spot
    queue: normal
    skip_regions: ['us-gov-east-1', 'us-gov-west-1']

  - name: spotfleet
    resource: instance_type=t3.large+t3.xlarge,spot_price=auto
    command: >-
      TOKEN=$(curl --silent -X PUT 'http://169.254.169.254/latest/api/token' -H 'X-aws-ec2-metadata-token-ttl-seconds: 300') &&
      curl --silent -H "X-aws-ec2-metadata-token: ${TOKEN}" 'http://169.254.169.254/latest/meta-data/instance-life-cycle' ;
      echo -n "-"; pbsnodes -v `hostname -s` | grep spot_fleet_request | awk '{print $3}' | cut -f1 -d- ;
    expected_output: spot-sfr
    queue: normal
    skip_regions: ['us-gov-east-1', 'us-gov-west-1']

  - name: placement_group_enabled
    resource: nodes=2,placement_group=True,instance_type=m5.large
    command: >-
      TOKEN=$(curl --silent -X PUT 'http://169.254.169.254/latest/api/token' -H 'X-aws-ec2-metadata-token-ttl-seconds: 300') &&
      curl --silent -o /dev/null -w '%{http_code}' -H "X-aws-ec2-metadata-token: ${TOKEN}" 'http://169.254.169.254/latest/meta-data/placement/group-name'
    expected_output: 200
    queue: normal
    skip_regions: []

  - name: placement_group_disabled
    resource: nodes=2,placement_group=False,instance_type=m5.large
    command: >-
      TOKEN=$(curl --silent -X PUT 'http://169.254.169.254/latest/api/token' -H 'X-aws-ec2-metadata-token-ttl-seconds: 300') &&
      curl --silent -o /dev/null -w '%{http_code}' -H "X-aws-ec2-metadata-token: ${TOKEN}" 'http://169.254.169.254/latest/meta-data/placement/group-name'
    expected_output: 404
    queue: normal
    skip_regions: []

  # Tests for job-shared queue need to be named as job-shared_1_* and job-shared_2_*
  # This is needed so that the output for 2nd job can be compared versus the output of the 1st job
  - name: job_shared_ondemand_1
    resource: instance_type=t3.xlarge+t3.2xlarge,ht_support=True,placement_group=False
    command: hostname -s
    expected_output: ip-[0-9]*-[0-9]*-[0-9]*-[0-9]*
    regex_match: true
    queue: job-shared
    skip_regions: []

  - name: job_shared_ondemand_2
    resource: instance_type=t3.xlarge+t3.2xlarge,ht_support=True,placement_group=False
    command: hostname -s
    expected_output: ip-[0-9]*-[0-9]*-[0-9]*-[0-9]*
    regex_match: true
    queue: job-shared
    skip_regions: []

  - name: job_shared_spot_1
    resource: instance_type=t3.xlarge+t3.2xlarge,ht_support=True,placement_group=False,spot_price=auto
    command: hostname -s
    expected_output: ip-[0-9]*-[0-9]*-[0-9]*-[0-9]*
    regex_match: true
    queue: job-shared
    skip_regions: ['us-gov-east-1', 'us-gov-west-1']

  - name: job_shared_spot_2
    resource: instance_type=t3.xlarge+t3.2xlarge,ht_support=True,placement_group=False,spot_price=auto
    command: hostname -s
    expected_output: ip-[0-9]*-[0-9]*-[0-9]*-[0-9]*
    regex_match: true
    queue: job-shared
    skip_regions: ['us-gov-east-1', 'us-gov-west-1']

  # Following jobs are invalid. We are just confirming scheduler hooks works as expected
  - name: invalid_instance_type
    resource: instance_type=t4.donotexist
    command: /bin/echo Test
    expected_output: "ec2 instance_type is invalid"
    queue: normal
    error_code: JOB_SUBMISSION_FAILED
    skip_regions: []

  - name: service_quota_not_available
    resource: instance_type=c5.24xlarge,nodes=5000
    command: /bin/echo Test
    expected_output: "Following AWS Service Quota needs to be requested from AWS"
    queue: normal
    error_code: JOB_SUBMISSION_FAILED
    skip_regions: []

  - name: hook_security_groups
    resource: security_groups=sg-fakeone
    command: /bin/echo Test
    expected_output: "Security groups not found or invalid"
    queue: normal
    error_code: JOB_SUBMISSION_FAILED
    skip_regions: []

  - name: hook_iam_role
    resource: instance_profile=FakeProfile
    command: /bin/echo Test
    expected_output: "Instance profile not found"
    queue: normal
    error_code: JOB_SUBMISSION_FAILED
    skip_regions: []

  # Tests below are skipped by default as they require user inputs
  # Update <ENTER_USER_CUSTOM_VALUE> and change skip flag to false to run them

  - name: custom_subnet
    # Please enter a test subnet id
    resource: subnet_id=ENTER_USER_CUSTOM_VALUE
    command: >-
      TOKEN=$(curl --silent -X PUT 'http://169.254.169.254/latest/api/token' -H 'X-aws-ec2-metadata-token-ttl-seconds: 300') &&
      curl --silent -o /dev/null -w '%{http_code}' -H "X-aws-ec2-metadata-token: ${TOKEN}" 'http:/169.254.169.254/latest/meta-data/network/interfaces/macs/'
    expected_output: ENTER_USER_CUSTOM_VALUE
    queue: normal
    skip_regions: ["all"]
