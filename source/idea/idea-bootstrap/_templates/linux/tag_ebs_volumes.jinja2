# Begin: Tag EBS Volumes
function tag_ebs_volumes () {
  local TAGS='{{ context.utils.to_json(ebs_volume_tags + context.get_custom_aws_tags()) }}'
  local AWS=$(command -v aws)
  local AWS_INSTANCE_ID=$(instance_id)
  local VOLUMES=$($AWS ec2 describe-volumes \
                                --filters "Name=attachment.instance-id,Values=${AWS_INSTANCE_ID}" \
                                --region "{{ context.aws_region }}" \
                                --query "Volumes[*].[VolumeId]" \
                                --out text)
  if [ ! -z "$VOLUMES" ]; then
    echo $VOLUMES | while read EBS_ID; do
      $AWS ec2 create-tags \
          --resources "${EBS_ID}" \
          --region "{{ context.aws_region }}" \
          --tags "${TAGS}"
    done

    local MAX_RETRIES=5
    local RETRY_COUNT=0
    while [[ $? -ne 0 ]] && [[ ${RETRY_COUNT} -lt ${MAX_RETRIES} ]]
    do
      local SLEEP_TIME=$(( RANDOM % 33 + 8 ))  # Minimum of 8 seconds sleeping
      log_info "(${RETRY_COUNT}/${MAX_RETRIES}) ec2 tag failed due to EC2 API error, retrying in ${SLEEP_TIME} seconds ..."
      sleep ${SLEEP_TIME}
      ((RETRY_COUNT++))
      echo $VOLUMES | while read EBS_ID; do
        $AWS ec2 create-tags \
            --resources "${EBS_ID}" \
            --region "{{ context.aws_region }}" \
            --tags "${TAGS}"
      done
    done
  fi
}
tag_ebs_volumes
# End: Tag EBS Volumes

