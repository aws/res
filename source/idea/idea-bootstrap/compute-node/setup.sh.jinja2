#!/bin/bash

#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
#  with the License. A copy of the License is located at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
#  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
#  and limitations under the License.

set -x

if [[ -f /etc/os-release ]]; then
  OS_RELEASE_ID=$(grep -E '^(ID)=' /etc/os-release | awk -F'"' '{print $2}')
  OS_RELEASE_VERSION_ID=$(grep -E '^(VERSION_ID)=' /etc/os-release | awk -F'"' '{print $2}')
  BASE_OS=$(echo $OS_RELEASE_ID${OS_RELEASE_VERSION_ID%%.*})
elif [[ -f /usr/lib/os-release ]]; then
  OS_RELEASE_ID=$(grep -E '^(ID)=' /usr/lib/os-release | awk -F'"' '{print $2}')
  OS_RELEASE_VERSION_ID=$(grep -E '^(VERSION_ID)=' /usr/lib/os-release | awk -F'"' '{print $2}')
  BASE_OS=$(echo $OS_RELEASE_ID${OS_RELEASE_VERSION_ID%%.*})
else
  echo "Base OS information on Linux instance cannot be found."
  exit 1
fi

{% set PATH = '/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/opt/pbs/bin:/opt/pbs/sbin:/opt/pbs/bin' %}
echo -e "
## [BEGIN] IDEA Environment Configuration - Do Not Delete
AWS_DEFAULT_REGION={{ context.aws_region }}
AWS_REGION={{ context.aws_region }}
RES_BASE_OS=$BASE_OS
IDEA_MODULE_NAME={{ context.module_name }}
IDEA_MODULE_ID={{ context.module_id }}
IDEA_MODULE_SET={{ context.module_set }}
IDEA_MODULE_VERSION={{ context.module_version }}
IDEA_CLUSTER_S3_BUCKET={{ context.cluster_s3_bucket }}
IDEA_CLUSTER_NAME={{ context.cluster_name }}
IDEA_CLUSTER_HOME={{ context.cluster_home_dir }}
IDEA_JOB_ID={{ context.vars.job.job_id }}
IDEA_JOB_UID={{ context.vars.job.job_uid }}
IDEA_JOB_OWNER={{ context.vars.job.owner }}
IDEA_JOB_GROUP={{ context.vars.job.job_group }}
IDEA_JOB_NAME={{ context.vars.job.job_name }}
IDEA_JOB_QUEUE={{ context.vars.job.queue }}
IDEA_JOB_SCALING_MODE={{ context.vars.job.scaling_mode }}
IDEA_COMPUTE_NODE_LOGS_DIR={{ context.vars.job_directory }}/logs/$(hostname -s)
BOOTSTRAP_DIR=/root/bootstrap" > /etc/environment

{% if context.https_proxy != '' %}
echo -e "IDEA_HTTPS_PROXY={{ context.https_proxy }}
IDEA_NO_PROXY={{ context.no_proxy }}" >> /etc/environment
{% endif %}

echo -e "## [END] IDEA Environment Configuration

PATH={{ PATH }}
" >> /etc/environment

source /etc/environment

echo -n "no" > ${BOOTSTRAP_DIR}/reboot_required.txt

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
source "${SCRIPT_DIR}/../common/bootstrap_common.sh"
{% include 'compute-node/_templates/scheduler_stop.jinja2' %}

{% include '_templates/linux/idea_proxy.jinja2' %}

{% include '_templates/linux/idea_service_account.jinja2' %}

# Begin: Install and Configure AWS Systems Manager Agent
/bin/bash "${SCRIPT_DIR}/../common/aws_ssm.sh" -o $RES_BASE_OS -r $AWS_REGION -n $IDEA_CLUSTER_NAME -s "${SCRIPT_DIR}"
configure_amazon_ssm_agent
# End: Install and Configure AWS Systems Manager Agent

# Begin: Install EPEL Repo
/bin/bash "${SCRIPT_DIR}/../common/epel_repo.sh" -o $RES_BASE_OS -s "${SCRIPT_DIR}"
# End: Install EPEL Repo

# Begin: Install NFS Utils and dependency items
/bin/bash "${SCRIPT_DIR}/../common/nfs_utils.sh" -o $RES_BASE_OS -s "${SCRIPT_DIR}"
# End: Install NFS Utils and dependency items

{% include '_templates/linux/mount_shared_storage.jinja2' %}

mkdir -p ${IDEA_COMPUTE_NODE_LOGS_DIR}

log_info "executing compute_node.sh ..."
/bin/bash ${SCRIPT_DIR}/compute_node.sh >> "${IDEA_COMPUTE_NODE_LOGS_DIR}/compute_node_bootstrap.log" 2>&1
