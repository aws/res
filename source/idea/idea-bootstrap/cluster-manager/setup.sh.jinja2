#!/bin/bash

#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
#  with the License. A copy of the License is located at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
#  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
#  and limitations under the License.

set -x

{%- set PATH = '/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/opt/idea/python/latest/bin' %}
echo -e "
## [BEGIN] IDEA Environment Configuration - Do Not Delete
AWS_DEFAULT_REGION={{ context.aws_region }}
AWS_REGION={{ context.aws_region }}
IDEA_BASE_OS={{ context.base_os }}
IDEA_MODULE_NAME={{ context.module_name }}
IDEA_MODULE_ID={{ context.module_id }}
IDEA_MODULE_SET={{ context.module_set }}
IDEA_MODULE_VERSION={{ context.module_version }}
IDEA_CLUSTER_S3_BUCKET={{ context.cluster_s3_bucket }}
IDEA_CLUSTER_NAME={{ context.cluster_name }}
IDEA_CLUSTER_HOME={{ context.cluster_home_dir }}
IDEA_APP_DEPLOY_DIR={{ context.app_deploy_dir }}
BOOTSTRAP_DIR=/root/bootstrap" > /etc/environment

{% if context.https_proxy != '' %}
echo -e "IDEA_HTTPS_PROXY={{ context.https_proxy }}
IDEA_NO_PROXY={{ context.no_proxy }}" >> /etc/environment
{% endif %}

echo -e "## [END] IDEA Environment Configuration

PATH={{ PATH }}
" >> /etc/environment

source /etc/environment

echo -n "no" > ${BOOTSTRAP_DIR}/reboot_required.txt

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
source "${SCRIPT_DIR}/../common/bootstrap_common.sh"

{% include '_templates/linux/idea_proxy.jinja2' %}

{% include '_templates/linux/idea_service_account.jinja2' %}

{% include '_templates/linux/aws_ssm.jinja2' %}

{% include '_templates/linux/epel_repo.jinja2' %}

{% include '_templates/linux/system_packages.jinja2' %}

{%- include '_templates/linux/cloudwatch_agent.jinja2' %}

{%- include '_templates/linux/restrict_ssh.jinja2' %}

{%- if context.is_metrics_provider_prometheus() %}
  {%- include '_templates/linux/prometheus.jinja2' %}
  {%- include '_templates/linux/prometheus_node_exporter.jinja2' %}
{%- endif %}

{% include '_templates/linux/nfs_utils.jinja2' %}

{% include '_templates/linux/jq.jinja2' %}

{%- with  ebs_volume_tags = [
  {'Key':'res:EnvironmentName', 'Value': context.cluster_name },
  {'Key':'res:ModuleName', 'Value': context.module_name },
  {'Key':'res:ModuleId', 'Value': context.module_id },
  {'Key':'Name', 'Value': context.cluster_name + '/' + context.module_id + ' Root Volume' }
] %}
  {%- include '_templates/linux/tag_ebs_volumes.jinja2' %}
{%- endwith %}

{%- with  network_interface_tags = [
  {'Key':'res:EnvironmentName', 'Value': context.cluster_name },
  {'Key':'res:ModuleName', 'Value': context.module_name },
  {'Key':'res:ModuleId', 'Value': context.module_id },
  {'Key':'Name', 'Value': context.cluster_name + '/' + context.module_id + ' Network Interface' }
] %}
  {%- include '_templates/linux/tag_network_interface.jinja2' %}
{%- endwith %}

{% include '_templates/linux/disable_se_linux.jinja2' %}

log_info "Installing LDAP + Putty packages ..."
OPENLDAP_SERVER_PKGS=({{ ' '.join(context.config.get_list('global-settings.package_config.linux_packages.openldap_server', required=True)) }})
PUTTY_PKGS=({{ ' '.join(context.config.get_list('global-settings.package_config.linux_packages.putty', required=True)) }})
yum install -y ${OPENLDAP_SERVER_PKGS[*]} ${PUTTY_PKGS[*]}

{% with alias_prefix = 'idea', install_dir = '/opt/idea/python' %}
  {%- include '_templates/linux/python.jinja2' %}
{%- endwith %}

{% include '_templates/linux/chronyd.jinja2' %}

{% include '_templates/linux/disable_ulimit.jinja2' %}

{% include '_templates/linux/disable_strict_host_check.jinja2' %}

{% include '_templates/linux/disable_motd_update.jinja2' %}

{%- with secure_path = PATH %}
  {%- include '_templates/linux/sudoer_secure_path.jinja2' %}
{%- endwith %}

{%- with messages = [
  context.module_name + ' (v'+context.module_version+'), Cluster: ' + context.cluster_name
] %}
  {%- include '_templates/linux/motd.jinja2' %}
{%- endwith %}

{% include '_templates/linux/mount_shared_storage.jinja2' %}

/bin/bash ${SCRIPT_DIR}/install_app.sh "{{context.vars.app_package_uri}}"

# cluster manager nodes should join directory service after app has started.
# this is to ensure AD Automation Agent has started, when directory service provider is activedirectory
{% include '_templates/linux/join_directoryservice.jinja2' %}

# lock down access to IDEA_CLUSTER_HOME for root user
mkdir -p "${IDEA_CLUSTER_HOME}"
chmod 700 "${IDEA_CLUSTER_HOME}"

REBOOT_REQUIRED=$(cat /root/bootstrap/reboot_required.txt)
if [[ "${REBOOT_REQUIRED}" == "yes" ]]; then
  reboot
fi
