#!/bin/bash

#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
#  with the License. A copy of the License is located at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
#  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
#  and limitations under the License.

set -x

source /etc/environment

APP_PACKAGE_DOWNLOAD_URI="${1}"
APP_NAME="cluster-manager"

AWS=$(command -v aws)
# AWS_REGION comes from sourcing /etc/environment
INSTANCE_REGION=${AWS_REGION}
S3_BUCKET=$(echo ${APP_PACKAGE_DOWNLOAD_URI} | cut -f3 -d/)
if [[ ${INSTANCE_REGION} =~ ^us-gov-[a-z]+-[0-9]+$ ]]; then
  S3_BUCKET_REGION=$(curl -s --head https://${S3_BUCKET}.s3.us-gov-west-1.amazonaws.com | grep bucket-region | awk '{print $2}' | tr -d '\r\n')
  echo "Instance Region: [${INSTANCE_REGION}]  S3 Bucket Region: [${S3_BUCKET_REGION}]"
  $AWS --region ${S3_BUCKET_REGION} s3 cp "${APP_PACKAGE_DOWNLOAD_URI}" "${BOOTSTRAP_DIR}/"
else
  #S3_BUCKET_REGION=$(curl -s --head https://${S3_BUCKET}.s3.us-east-1.amazonaws.com | grep bucket-region | awk '{print $2}' | tr -d '\r\n')
  $AWS --region ${INSTANCE_REGION} s3 cp "${APP_PACKAGE_DOWNLOAD_URI}" "${BOOTSTRAP_DIR}/"
fi
PACKAGE_ARCHIVE=$(basename "${APP_PACKAGE_DOWNLOAD_URI}")
PACKAGE_NAME="${PACKAGE_ARCHIVE%.tar.gz*}"
PACKAGE_DIR="${BOOTSTRAP_DIR}/${PACKAGE_NAME}"
mkdir -p ${PACKAGE_DIR}
tar -xvf ${BOOTSTRAP_DIR}/${PACKAGE_ARCHIVE} -C ${PACKAGE_DIR}
idea_pip install -r ${PACKAGE_DIR}/requirements.txt
idea_pip install $(ls ${PACKAGE_DIR}/*-lib.tar.gz)
mkdir -p ${IDEA_APP_DEPLOY_DIR}/${APP_NAME}
mkdir -p ${IDEA_APP_DEPLOY_DIR}/logs

# copy webapp
if [[ -d "${IDEA_APP_DEPLOY_DIR}/${APP_NAME}/webapp" ]]; then
  rm -rf "${IDEA_APP_DEPLOY_DIR}/${APP_NAME}/webapp"
fi
cp -r ${PACKAGE_DIR}/webapp ${IDEA_APP_DEPLOY_DIR}/${APP_NAME}

# copy resources
if [[ -d "${IDEA_APP_DEPLOY_DIR}/${APP_NAME}/resources" ]]; then
  rm -rf "${IDEA_APP_DEPLOY_DIR}/${APP_NAME}/resources"
fi
cp -r ${PACKAGE_DIR}/resources ${IDEA_APP_DEPLOY_DIR}/${APP_NAME}

{% include '_templates/linux/create_idea_app_certs.jinja2' %}

{% include '_templates/linux/supervisord.jinja2' %}

if [[ ! -z "${IDEA_HTTPS_PROXY}" ]]; then
  echo "[program:${APP_NAME}]
environment=
    https_proxy=\"%(ENV_IDEA_HTTPS_PROXY)s\",
    HTTPS_PROXY=\"%(ENV_IDEA_HTTPS_PROXY)s\",
    no_proxy=\"%(ENV_IDEA_NO_PROXY)s\",
    NO_PROXY=\"%(ENV_IDEA_NO_PROXY)s\"" > /etc/supervisord.d/${APP_NAME}.ini
else
  echo "[program:${APP_NAME}]" > /etc/supervisord.d/${APP_NAME}.ini
fi
echo "command=/opt/idea/python/latest/bin/resserver
process_name=${APP_NAME}
redirect_stderr=true
stdout_logfile = /opt/idea/app/logs/stdout.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
startsecs=30
startretries=3
" >> /etc/supervisord.d/${APP_NAME}.ini

systemctl restart supervisord
